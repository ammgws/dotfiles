# Customised config for sway based on /etc/sway/config
#
# Read `man 5 sway` for a complete reference.

### Variables
# WinKey = Mod4, Alt=Mod1
set $mod Mod4

### Key bindings
#
# Basics:
#
    # kill focused window
    bindsym $mod+q kill

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # reload the configuration file
    bindsym $mod+Shift+c reload

    # exit sway (logs you out of your Wayland session)
    #bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' --button-no-terminal 'Yes, exit sway' 'swaymsg exit'
    # use swaynagmode instead of the above so can exit using keyboard
    set {
      $nag         exec swaynagmode
      $nag_exit    $nag --exit
      $nag_confirm $nag --confirm
      $nag_select  $nag --select
    }
    mode "nag" {
      bindsym {
        Ctrl+d    mode "default"

        Ctrl+c    $nag_exit
        q         $nag_exit
        Escape    $nag_exit

        Return    $nag_confirm

        Tab       $nag_select prev
        Shift+Tab $nag_select next

        Left      $nag_select next
        Right     $nag_select prev

        Up        $nag_select next
        Down      $nag_select prev
      }
    }
    bindsym $mod+Shift+e $nag -t "warning" -m "Exit Sway?" -b "Exit" "swaymsg exit" -b "Reload" "swaymsg reload"
    # -R is recommended for swaynag_command so that, upon a syntax error in your sway config, the
    # 'Reload Sway' option will be initially selected instead of the 'Exit Sway' option
    swaynag_command $nag -R

#
# Moving around:
#
    # Move your focus around
    set $left h
    set $down j
    set $up k
    set $right l
    #bindsym $mod+$left focus left
    #bindsym $mod+$down focus down
    #bindsym $mod+$up focus up
    #bindsym $mod+$right focus right
    # or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # _move_ the focused window with the same, but add Shift
    #bindsym $mod+Shift+$left move left
    #bindsym $mod+Shift+$down move down
    #bindsym $mod+Shift+$up move up
    #bindsym $mod+Shift+$right move right
    # ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

    # alt-tab like behaviour
    bindsym $mod+tab workspace next_on_output 
    bindsym $mod+Shift+tab workspace prev_on_output 

    # Rename
    bindsym $mod+Shift+equal exec $$prompt "New workspace name (retain number):" | xargs -I {} bash -c "swaymsg 'rename workspace to \"$(~/.local/bin/sway-get-workspace prefix){}\"'"
    bindsym $mod+Control+equal exec $$prompt "New workspace name:" | xargs -I {} swaymsg 'rename workspace to "{}"'

#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    #bindsym $mod+s layout stacking
    #bindsym $mod+w layout tabbed
    bindsym $mod+Ctrl+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # move focus to the parent container
    bindsym $mod+a focus parent

# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# Passthrough for when connecting to remote sway instance (wayvnc)
mode passthrough {
	bindsym $mod+Pause mode default
}
bindsym $mod+Pause mode passthrough

# ┏━━━━━━━━━━━━━━━━━━━━━━━━┓
# ┃ Other config files
# ┗━━━━━━━━━━━━━━━━━━━━━━━━┛
include /etc/sway/config.d/*
include config.d/*
# TODO?
#include `hostname`/*
